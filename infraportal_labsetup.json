{"AWSTemplateFormatVersion" : "2010-09-09", 	"Description" : "This template is used to create One VPC and Two subnetIDs", 	 	"Resources" : { 		"VPC" : { 		  "Type" : "AWS::EC2::VPC", 		  "Properties" : { 			"CidrBlock" : "10.0.0.0/16", 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ] 		  } 		},  		"PublicSubnetOne" : { 		  "Type" : "AWS::EC2::Subnet", 		  "Properties" : { 			"VpcId" : { "Ref" : "VPC" }, 			"AvailabilityZone" : "us-east-1a",	 			"CidrBlock" : "10.0.1.0/24", 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }, 			{"Key" : "Network", "Value" : "Public" }] 		  } 		}, 		"InternetGateway" : { 		  "Type" : "AWS::EC2::InternetGateway", 		  "Properties" : { 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ] 		  } 		}, 		"AttachGateway" : { 		   "Type" : "AWS::EC2::VPCGatewayAttachment", 		   "Properties" : { 			 "VpcId" : { "Ref" : "VPC" }, 			 "InternetGatewayId" : { "Ref" : "InternetGateway" } 		   } 		}, 		"RouteTable" : { 		  "Type" : "AWS::EC2::RouteTable", 		  "Properties" : { 			"VpcId" : {"Ref" : "VPC"}, 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ] 		  } 		}, 		"Route" : { 		  "Type" : "AWS::EC2::Route", 		  "Properties" : { 			"RouteTableId" : { "Ref" : "RouteTable" }, 			"DestinationCidrBlock" : "0.0.0.0/0", 			"GatewayId" : { "Ref" : "InternetGateway" } 		  } 		}, 		"PublicSubnetOneRouteTableAssociation" : { 		  "Type" : "AWS::EC2::SubnetRouteTableAssociation", 		  "Properties" : { 			"SubnetId" : { "Ref" : "PublicSubnetOne" }, 			"RouteTableId" : { "Ref" : "RouteTable" } 		  } 		}, 		"NetworkAcl" : { 		  "Type" : "AWS::EC2::NetworkAcl", 		  "Properties" : { 			"VpcId" : {"Ref" : "VPC"}, 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} } ] 		  } 		}, 		"InboundHTTPNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "100", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "false", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "80", "To" : "80"} 		  } 		}, 		"InboundSSHNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "101", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "false", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "22", "To" : "22"} 		  } 		}, 		"InboundResponsePortsNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "102", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "false", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "1024", "To" : "65535"} 		  } 		}, 		"OutBoundHTTPNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "100", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "true", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "80", "To" : "80"} 		  } 		}, 		"OutBoundHTTPSNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "101", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "true", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "443", "To" : "443"} 		  } 		}, 		"OutBoundResponsePortsNetworkAclEntry" : { 		  "Type" : "AWS::EC2::NetworkAclEntry", 		  "Properties" : { 			"NetworkAclId" : {"Ref" : "NetworkAcl"}, 			"RuleNumber" : "102", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "true", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "1024", "To" : "65535"} 		  } 		}, 		"PublicSubnetOneNetworkAclAssociation" : { 		  "Type" : "AWS::EC2::SubnetNetworkAclAssociation", 		  "Properties" : { 			"SubnetId" : { "Ref" : "PublicSubnetOne" }, 			"NetworkAclId" : { "Ref" : "NetworkAcl" } 		  } 		}, 		"PrivateSubnetOne" : { 		  "Type" : "AWS::EC2::Subnet", 		  "Properties" : { 			"VpcId" : { "Ref" : "VPC" }, 			"AvailabilityZone" : "us-east-1a",		 			"CidrBlock" : "10.0.2.0/24", 			"Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }, 				{"Key" : "Network", "Value" : "Private" }] 		  } 		}, 		"PrivateRouteTable" : { 		      "Type" : "AWS::EC2::RouteTable", 		      "Properties" : { 			"VpcId" : {"Ref" : "VPC"}, 			"Tags" : [ 			  {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }, 			  {"Key" : "Network", "Value" : "Private" } 			] 		      } 		    }, 		    "PrivateSubnetOneRouteTableAssociation" : { 		      "Type" : "AWS::EC2::SubnetRouteTableAssociation", 		      "Properties" : { 			"SubnetId" : { "Ref" : "PrivateSubnetOne" }, 			"RouteTableId" : { "Ref" : "PrivateRouteTable" } 		      } 		    }, 		    "PrivateNetworkAcl" : { 		      "Type" : "AWS::EC2::NetworkAcl", 		      "Properties" : { 			"VpcId" : {"Ref" : "VPC"}, 			"Tags" : [ 			  {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }, 			  {"Key" : "Network", "Value" : "Private" } 			] 		      } 		    }, 		    "InboundPrivateNetworkAclEntry" : { 		      "Type" : "AWS::EC2::NetworkAclEntry", 		      "Properties" : { 			"NetworkAclId" : {"Ref" : "PrivateNetworkAcl"}, 			"RuleNumber" : "100", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "false", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "0", "To" : "65535"} 		      } 		    }, 		    "OutBoundPrivateNetworkAclEntry" : { 		      "Type" : "AWS::EC2::NetworkAclEntry", 		      "Properties" : { 			"NetworkAclId" : {"Ref" : "PrivateNetworkAcl"}, 			"RuleNumber" : "100", 			"Protocol" : "6", 			"RuleAction" : "allow", 			"Egress" : "true", 			"CidrBlock" : "0.0.0.0/0", 			"PortRange" : {"From" : "0", "To" : "65535"} 		      } 		    },  		    "PrivateSubnetOneNetworkAclAssociation" : { 		      "Type" : "AWS::EC2::SubnetNetworkAclAssociation", 		      "Properties" : { 			"SubnetId" : { "Ref" : "PrivateSubnetOne" }, 			"NetworkAclId" : { "Ref" : "PrivateNetworkAcl" } 		      } 		    }, "CfSecurityGroup" : {   "Type" : "AWS::EC2::SecurityGroup",   "Properties" : {      "GroupName" : "cloudformation-securitygroup",      "GroupDescription" : "Created by Cloudformation",      "VpcId" : {"Ref": "VPC"},      "SecurityGroupIngress" : [{"IpProtocol" : "tcp","FromPort" : "80","ToPort" : "80","CidrIp" : "0.0.0.0/0"},{"IpProtocol" : "tcp","FromPort" : "22","ToPort" : "22","CidrIp" : "0.0.0.0/0"}],       "SecurityGroupEgress" : [{"IpProtocol" : "tcp","FromPort" : "0","ToPort" : "65535","CidrIp" : "0.0.0.0/0"}]   } }, 		"TestInstanceOne": {             "Type": "AWS::EC2::Instance",             "Properties": {                 "ImageId": "ami-c58c1dd3",                 "SecurityGroupIds": [{"Ref": "CfSecurityGroup" }],                 "SubnetId": {"Ref": "PublicSubnetOne" },                 "InstanceType": "t2.micro",                 "KeyName": "Test-KeyPair", 				"Tags": [{"Key": "Name","Value": "Instance-One"},{"Key": "CreatedBy","Value": "Cloudformation"}] 			}         }, 	"TestInstanceEIP": {         "Type" : "AWS::EC2::EIP",     "Properties" : {         "InstanceId" : { "Ref": "TestInstanceOne" },         "Domain" : "vpc"         } 	},     		 		"TestInstanceTwo": {             "Type": "AWS::EC2::Instance",             "Properties": {                 "ImageId": "ami-c58c1dd3",                 "SecurityGroupIds": [{"Ref": "CfSecurityGroup" }],                 "SubnetId": {"Ref": "PrivateSubnetOne" },                 "InstanceType": "t2.micro",                 "KeyName": "Test-KeyPair", 				"Tags": [{"Key": "Name","Value": "Instance-Two"},{"Key": "CreatedBy","Value": "Cloudformation"}] 			}         } 	}, 	"Outputs" : { 		"VPCID" : { 			"Value" :  { "Ref" : "VPC" } 		}, 		"PublicSubnetOne" : { 			"Value" :  { "Ref" : "PublicSubnetOne" } 		}, 		"PrivateSubnetOne" : { 			"Value" :  { "Ref" : "PrivateSubnetOne" } 		} 	}	 }